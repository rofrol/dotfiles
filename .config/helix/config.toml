# theme = "onelight_white"
# theme = "catppuccin_latte_white"
theme = "emacs_my"

[editor]
# line-number = "relative"
# cursorline = true
color-modes = true
# bufferline = "always"
bufferline = "multiple"

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.indent-guides]
render = true


[editor.statusline]
# https://theari.dev/blog/enhanced-helix-config/
# Add the git branch to the status line.
# left = ["mode", "spinner", "version-control", "file-name"]
left = ["mode", "spinner", "version-control", "file-name", "diagnostics", "workspace-diagnostics" ]
# left = ["mode", "spacer", "diagnostics", "workspace-diagnostics", "spinner"]
# right = ["file-name", "spacer", "position-percentage", "spacer"]
right = ["selections", "position", "position-percentage", "file-encoding", "file-line-ending", "file-type"]


[keys.normal]
# C-s save_selection Save the current selection to the jumplist
# C-s = ":w" # Ctrl and 's' to write
Cmd-s = ":w" # Cmd or Win or Meta and 's' to write

# Helix: an editor hopping story (NeovimConf 2022 Talk) https://www.youtube.com/watch?v=tGYvUXYN-c0
G = "goto_file_end"
# X = "extend_line_above"

# This adds a function to "unselect" the previous line when you've accidentally selected too many lines.
# The usual x extends the selection to the next line, but what if you've selected one line too many? Normally, you would have to navigate back up and start the selection all over again. But with this tweak, you can simply press Shift x to shrink your selection by one line, making the process much more efficient.
A-x = "extend_to_line_bounds"
X = "select_line_above"

# select a word, yank it to the search-register with * go into visual mode and select the following occurrences with n
# https://www.reddit.com/r/HelixEditor/comments/1dch5ac/comment/l7y34ij/
# https://www.reddit.com/r/HelixEditor/comments/17tjcb2/comment/k8y2434/
# make sure there is only one selection, select word under cursor, set search to selection, then switch to select mode
# "C-d" = ["keep_primary_selection", "move_prev_word_start", "move_next_word_end", "search_selection", "select_mode"]

# https://www.reddit.com/r/HelixEditor/comments/14vqm19/comment/jrgr4f9/
esc = ["collapse_selection", "keep_primary_selection", "normal_mode" ]

[keys.normal.space]
# https://github.com/helix-editor/helix/pull/12527#issuecomment-2607790981
D = ":insert-output date -u '+## %Y-%m-%d'"
# https://github.com/David-Else/developer-workstation-setup-script-debian/blob/9a9a36bfd2733ecbe81eff78ba2cb7d5d84d55f8/dotfiles/helix/.config/helix/config.toml#L11
# similar but with pipe instead of :insert-output
S = ":pipe gecho -n $(date +%Y-%m-%d)"
# https://github.com/David-Else/developer-workstation-setup-script-debian/blob/9a9a36bfd2733ecbe81eff78ba2cb7d5d84d55f8/dotfiles/helix/.config/helix/config.toml#L19C8-L19C47
"." = "file_picker_in_current_buffer_directory"

l = ":toggle lsp.display-inlay-hints"

[keys.insert]
# just ":w" is enought in insert mode https://github.com/helix-editor/helix/issues/3377#issuecomment-1210017485
# after saving I want to be in normal mode
C-s =  ["normal_mode", ":w"] # Ctrl and 's' to write
Cmd-s = ["normal_mode", ":w"] # Cmd or Win or Meta

[keys.select]
# select a word, yank it to the search-register with * go into visual mode and select the following occurrences with n
# https://www.reddit.com/r/HelixEditor/comments/1dch5ac/comment/l7y34ij/
# https://www.reddit.com/r/HelixEditor/comments/17tjcb2/comment/k8y2434/
# if already in select mode, just add new selection at next occurrence
# "C-d" = ["search_selection", "extend_search_next"]

A-x = "extend_to_line_bounds"
X = "select_line_above"

o = "flip_selections"
